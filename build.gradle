apply plugin: 'java'
apply plugin: 'kotlin'

apply plugin: 'eclipse'
eclipse.classpath.downloadJavadoc = true
eclipse.classpath.downloadSources = false
tasks.eclipse {
  doLast {
    'D:\\Program_Files\\eSpeak\\command_line\\espeak.exe eclipse'.execute()
  }
}

repositories {
  mavenCentral()
}

dependencies {
  testCompile 'junit:junit:4.12'
  //testRuntime 'org.hibernate:hibernate-core:5.2.10.Final'
  compile 'org.mock-server:mockserver-client-java:5.3.0'
  compile 'org.mock-server:mockserver-netty:5.3.0'
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  compile 'org.glassfish.jersey.core:jersey-client:2.0.1'
}

tasks.withType(Test) {
  outputs.upToDateWhen {false}
  testLogging.showStandardStreams = true
  testLogging.exceptionFormat = 'full'
}
buildscript {
  ext.kotlin_version = '1.2.40'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}
compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

task go(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'client.ServerAndCliKt'
  jvmArgs(["-Dhttp.proxyHost=localhost", "-Dhttp.proxyPort=1090"])
  jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=7778"
}
